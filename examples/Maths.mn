module examples;

public static class Maths
{
    public static void BasicIntegerArithmetic()
    {
        std::Int32 x = 12;
        std::Int32 y = 24;
        
        std::Int32 z = 12 + 24; // 36
    }
    
    public static void BasicDoubleArithmethic()
    {
        std::Double x = 12.4;
        std::Double y = 6.2;
        
        std::Double z = x / y; // 2
    }
    
    public static void HelperMethods()
    {
        std::Double sqrt = std::Math.Sqrt(81); // 9
        
        // rounding reminder: .5 or over means we go up, otherwise we don't change the number
        // e.g. 12.5 rounds to 13, just like 12.9 rounds to 13
        // but 12.1 rounds down to 12
        
        // Round gives us integers
        std::Int32 round1 = std::Math.Round(12.3); // 12
        std::Int32 round2 = std::Math.Round(12.5); // 13
        std::Int32 round3 =  std::Math.Round(12.8); // 13
        
        // RoundDecimal gives us std::Doubles
        // second arg is how many decimal numbers should be left
        std::Double decRound1 = std::Math.RoundDecimal(12.33, 1); // 12.3, first decimal place
        std::Double decRound2 = std::Math.RoundDecimal(12.355, 2); // 12.36, second decimal place
        std::Double decRound2 = std::Math.RoundDecimal(12.3582, 2); // 12.358, third decimal place
    }
}